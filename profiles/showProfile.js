const db = require('../database/db-pool');
const { Telegraf, Markup, Scenes, session } = require('telegraf');


const showProfile = async (ctx) => {
    function telegramId(ctx) {
        return ctx.from.id;
    }

    let conn;
    let user; // Define the user variable at the function level

    try {
        const userId = telegramId(ctx);

        conn = await db.getConnection();

        [user] = await conn.query('SELECT * FROM users WHERE telegram_id = ?', [userId]);

        if (!user) {
            ctx.reply('‚ùå –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤—É—é –∞–Ω–∫–µ—Ç—É!');
            // Create your profile here
            return;
        }
        if (user.showProfile === 0) {
            ctx.reply('‚ùå –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è.');
            return;
        }

        const {name, surname, city, age, info, search, goal} = user;

        let text = "üë§ –í–ê–®–ê –ê–ù–ö–ï–¢–ê:\n\n";
        text += `üë§ –ò–º—è: ${name}\n\n`;
        text += `üë• –§–∞–º–∏–ª–∏—è: ${surname}\n\n`;
        text += `üåé –ì–æ—Ä–æ–¥, –°—Ç—Ä–∞–Ω–∞: ${city}\n\n`;
        text += `üìì –í–æ–∑—Ä–∞—Å—Ç: ${age}\n\n`;
        text += `üì¨ –û —Å–µ–±–µ: ${info}\n\n`;
        text += `üîç –ò—â—É: ${search}\n\n`;
        text += `üíï –¶–µ–ª—å –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞: ${goal}\n\n`;

        ctx.reply(text, {
            reply_markup: {
                keyboard: [
                    [{text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'}],
                ],
                resize_keyboard: true,
                one_time_keyboard: true,
            },
        });
    } catch (err) {
        console.error(err);
        ctx.reply('‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–Ω–∫–µ—Ç—ã');
    } finally {
        if (conn) conn.end();
    }

    try {
        // Asynchronous block that displays a photo or video after the main data
        if (user && user.fileId && user.fileType) {
            if (user.fileType === 'photo') {
                await ctx.telegram.sendPhoto(ctx.chat.id, user.fileId);
            } else if (user.fileType === 'video') {
                await ctx.telegram.sendVideo(ctx.chat.id, user.fileId);
            }
        }
        // Create a keyboard
        const keyboard = [
            [{text: '–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É üìù', callback_data: 'fill_form'}],
            [{text: '–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã üíé', callback_data: 'search'}],
            // [{text: '–ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –∞–Ω–∫–µ—Ç—É üëÆüèº', callback_data: 'complain'}],
        ];
        await ctx.telegram.sendMessage(ctx.chat.id, '–ö–∞–∫ –≤–∞–º –∞–Ω–∫–µ—Ç–∞? ', {
            reply_markup: {
                inline_keyboard: keyboard,
            },
        });

    } catch (err) {
        console.error(err);
        ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ —Ñ–∞–π–ª–∞');
    }
};

module.exports = {
    showProfile
};